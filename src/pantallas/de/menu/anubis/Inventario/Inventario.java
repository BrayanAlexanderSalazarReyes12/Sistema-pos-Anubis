/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas.de.menu.anubis.Inventario;

import conexion.bd;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import pantallas.de.menu.anubis.Empleados_menu;
import pantallas.de.menu.anubis.Render;

/**
 *
 * @author braya
 */
public class Inventario extends javax.swing.JInternalFrame {
    DefaultTableModel dtm;
    protected int consultar_producto = 0;
    Registrar_productos rp = new Registrar_productos();
    Modificar_productos mp = new Modificar_productos();
    Thread hilo;
    int verificar = 0;
    /**
     * Creates new form Inventario
     */
    public Inventario() {
        initComponents();
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                while(true){
                    // Pero usamos un truco y hacemos un ciclo infinito
                    try {
                        // En él, hacemos que el hilo duerma
                        Thread.sleep(1000);
                        // Y después realizamos las operaciones
                        actualizar_datos_de_inventario();
                        
                        // Así, se da la impresión de que se ejecuta cada cierto tiempo
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        hilo = new Thread(runnable);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("REGISTRAR PRODUCTO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 5, -1, -1));

        jLabel1.setText("Buscar producto:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, -1, -1));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 120, 30));

        jButton2.setText("BUSCAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 0, -1, 30));

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        rp.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int column = jTable1.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/jTable1.getRowHeight();
        if(row<jTable1.getColumnCount() && row >= 0 && column < jTable1.getColumnCount() && column >=0){
            Object value = jTable1.getValueAt(row, column);
            if(value instanceof JButton){
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                if(boton.getName().equals("M")){
                    if(evt.getClickCount() == 2){
                        try {
                            mp.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                            mp.jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                            mp.jSpinner1.setValue(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()));
                            mp.jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                            
                            //prueba de imagen
                            conexion.bd cbd = new bd();
                            cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
                            cbd.setUsuario("root");
                            cbd.setContrasena("");
                            Connection con = cbd.getConexion();
                            Statement s = con.createStatement();
                            ResultSet rs = s.executeQuery("SELECT imagen FROM inventario WHERE nombre = '"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+"'");
                            if(rs.next()){
                                InputStream is = rs.getBinaryStream(1);
                                BufferedImage bi = ImageIO.read(is);
                                ImageIcon li = new ImageIcon(bi);
                                Icon icono = new ImageIcon(li.getImage().getScaledInstance(mp.jLabel5.getWidth(), mp.jLabel5.getHeight(), Image.SCALE_DEFAULT));
                                mp.jLabel5.setIcon(icono);
                            }
                            rs.close();
                            mp.setVisible(true);
                            verificar = 1;
                        } catch (SQLException ex) {
                            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else if(verificar == 1){
                        try {
                            mp.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                            mp.jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                            mp.jSpinner1.setValue(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()));
                            mp.jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                            
                            //prueba de imagen
                            conexion.bd cbd = new bd();
                            cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
                            cbd.setUsuario("root");
                            cbd.setContrasena("");
                            Connection con = cbd.getConexion();
                            Statement s = con.createStatement();
                            ResultSet rs = s.executeQuery("SELECT imagen FROM inventario WHERE nombre = '"+jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString()+"'");
                            if(rs.next()){
                                InputStream is = rs.getBinaryStream(1);
                                BufferedImage bi = ImageIO.read(is);
                                ImageIcon li = new ImageIcon(bi);
                                Icon icono = new ImageIcon(li.getImage().getScaledInstance(mp.jLabel5.getWidth(), mp.jLabel5.getHeight(), Image.SCALE_DEFAULT));
                                mp.jLabel5.setIcon(icono);
                            }
                            rs.close();
                            mp.setVisible(true);
                            verificar = 1;
                        } catch (SQLException ex) {
                            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }else if(boton.getName().equals("E")){
                    try {
                        int id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                        conexion.bd cbd = new bd();
                        cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
                        cbd.setUsuario("root");
                        cbd.setContrasena("");
                        Connection con = cbd.getConexion();
                        PreparedStatement pst = con.prepareStatement("DELETE FROM inventario WHERE id='"+id+"'");
                        pst.executeUpdate();
                        nombre_de_inventario();
                    } catch (SQLException ex) {
                        Logger.getLogger(Empleados_menu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        consultar_producto = 1;
        nombre_de_inventario();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
    
    public void nombre_de_inventario(){
        if(consultar_producto == 0 || jTextField1.getText().equals(""))
        {
            Object datos[] = new Object[8];
            dtm = new DefaultTableModel(){@Override
            public boolean isCellEditable(int row, int column){
                return false;
            }};
            dtm.addColumn("#");
            dtm.addColumn("Categoria");
            dtm.addColumn("Nombre");
            dtm.addColumn("Cantidad");
            dtm.addColumn("Imagen");
            dtm.addColumn("Precio");
            dtm.addColumn("Modificar");
            dtm.addColumn("Eliminar");
            jTable1.setModel(dtm);
            jTable1.setDefaultRenderer(Object.class, new Render());
            JButton btn1 = new JButton("MODIFICAR");
            btn1.setName("M");
            JButton btn2 = new JButton("ELIMINAR");
            btn2.setName("E");
            try {
                conexion.bd cbd = new bd();
                cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
                cbd.setUsuario("root");
                cbd.setContrasena("");
                Connection con = cbd.getConexion();
                Statement s = con.createStatement();
                ResultSet rs = s.executeQuery("SELECT * FROM inventario");
                while(rs.next()){

                    datos[0] = rs.getString(1);
                    datos[1] = rs.getString(2);
                    datos[2] = rs.getString(3);
                    datos[3] = rs.getString(4);
                    //imagen cominezo
                    JLabel jl = new JLabel();
                    InputStream is = rs.getBinaryStream(5);
                    BufferedImage bi = ImageIO.read(is);
                    ImageIcon li = new ImageIcon(bi);
                    jl.setSize(140, 120);
                    Icon icono = new ImageIcon(li.getImage().getScaledInstance(jl.getWidth(), jl.getHeight(), Image.SCALE_DEFAULT));
                    jl.setIcon(icono);
                    datos[4] = jl;
                    //imagen final
                    datos[5] = rs.getString(6);
                    datos[6] = btn1;
                    datos[7] = btn2;
                    dtm.addRow(datos);
                }
                jTable1.setModel(dtm);
                jTable1.setRowHeight(70);
            } catch (SQLException ex) {
                Logger.getLogger(Empleados_menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(consultar_producto == 1){
            Object datos[] = new Object[8];
            dtm = new DefaultTableModel(){@Override
            public boolean isCellEditable(int row, int column){
                return false;
            }};
            dtm.addColumn("#");
            dtm.addColumn("Categoria");
            dtm.addColumn("Nombre");
            dtm.addColumn("Cantidad");
            dtm.addColumn("Imagen");
            dtm.addColumn("Precio");
            dtm.addColumn("Modificar");
            dtm.addColumn("Eliminar");
            jTable1.setModel(dtm);
            jTable1.setDefaultRenderer(Object.class, new Render());
            JButton btn1 = new JButton("MODIFICAR");
            btn1.setName("M");
            JButton btn2 = new JButton("ELIMINAR");
            btn2.setName("E");
            try {
                conexion.bd cbd = new bd();
                cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
                cbd.setUsuario("root");
                cbd.setContrasena("");
                Connection con = cbd.getConexion();
                Statement s = con.createStatement();
                ResultSet rs = s.executeQuery("SELECT * FROM inventario WHERE nombre = '"+jTextField1.getText()+"'");
                while(rs.next()){

                    datos[0] = rs.getString(1);
                    datos[1] = rs.getString(2);
                    datos[2] = rs.getString(3);
                    datos[3] = rs.getString(4);
                    //imagen cominezo
                    JLabel jl = new JLabel();
                    InputStream is = rs.getBinaryStream(5);
                    BufferedImage bi = ImageIO.read(is);
                    ImageIcon li = new ImageIcon(bi);
                    jl.setSize(140, 120);
                    Icon icono = new ImageIcon(li.getImage().getScaledInstance(jl.getWidth(), jl.getHeight(), Image.SCALE_DEFAULT));
                    jl.setIcon(icono);
                    datos[4] = jl;
                    //imagen final
                    datos[5] = rs.getString(6);
                    datos[6] = btn1;
                    datos[7] = btn2;
                    dtm.addRow(datos);
                }
                jTable1.setModel(dtm);
                jTable1.setRowHeight(70);
            } catch (SQLException ex) {
                Logger.getLogger(Empleados_menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Inventario.class.getName()).log(Level.SEVERE, null, ex);
            }
            consultar_producto = 0;
        }
    }
    
    public void actualizar_datos_de_inventario(){
        if(rp.ins_dat_ivent == 1){
            nombre_de_inventario();
            rp.ins_dat_ivent = 0;
        }
        if(mp.mod_dat_productos_val == 1){
            nombre_de_inventario();
            mp.mod_dat_productos_val = 0;
        }
    }
}

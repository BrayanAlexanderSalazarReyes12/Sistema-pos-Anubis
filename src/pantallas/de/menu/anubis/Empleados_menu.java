/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pantallas.de.menu.anubis;

import conexion.bd;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author braya
 */
public class Empleados_menu extends javax.swing.JInternalFrame {
    DefaultTableModel modelo;
    private String usuario;
    int verificar = 0;
    Thread hilo;
    modificar_empleados me = new modificar_empleados();
    Registrar_empleados re = new Registrar_empleados();
    /**
     * Creates new form Empleados_menu
     * @throws java.sql.SQLException
     */
    public Empleados_menu() throws SQLException {
        initComponents();
        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                // Esto se ejecuta en segundo plano una única vez
                while (true) {
                    // Pero usamos un truco y hacemos un ciclo infinito
                    try {
                        // En él, hacemos que el hilo duerma
                        Thread.sleep(1000);
                        // Y después realizamos las operaciones
                        actualizar_datos_de_cliente();
                        
                        // Así, se da la impresión de que se ejecuta cada cierto tiempo
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        // Creamos un hilo y le pasamos el runnable
        hilo = new Thread(runnable);
        hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setResizable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jButton1.setText("REGISTRAR EMPLEADOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int column = jTable1.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/jTable1.getRowHeight();
        if(row < jTable1.getRowCount() && row >= 0 && column < jTable1.getColumnCount() && column >= 0){
            Object value = jTable1.getValueAt(row, column);
            if(value instanceof JButton){
                ((JButton)value).doClick();
                JButton boton = (JButton) value;
                if(boton.getName().equals("M")){
                    if(evt.getClickCount() == 2)
                    {
                        me.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                        me.jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                        me.jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                        me.jTextField5.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                        me.jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
                        me.jTextField7.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                        me.jTextField6.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
                        me.setVisible(true);
                     verificar=1;
                    }else if(verificar==1){
                        me.jTextField1.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                        me.jTextField2.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
                        me.jTextField3.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
                        me.jTextField5.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
                        me.jTextField4.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
                        me.jTextField7.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
                        me.jTextField6.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 6).toString());
                    }
                }else if (boton.getName().equals("E")){
                    try {
                        int id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
                        conexion.bd cbd = new bd();
                        cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
                        cbd.setUsuario("root");
                        cbd.setContrasena("");
                        Connection con = cbd.getConexion();
                        PreparedStatement ps = con.prepareStatement("DELETE FROM usuarios WHERE id = '"+id+"'");
                        ps.executeUpdate();
                        //System.out.println("pantallas.de.menu.anubis.Empleados_menu.jTable1MouseClicked()");
                        nombre_empleado();
                    } catch (SQLException ex) {
                        Logger.getLogger(Empleados_menu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        re.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    public void nombre_empleado(){
        Object datos[] = new Object[9];
        modelo = new DefaultTableModel(){@Override
        public boolean isCellEditable(int row, int colum){
                return false;
            }};
        modelo.addColumn("#");
        modelo.addColumn("nombre");
        modelo.addColumn("usuario");
        modelo.addColumn("contraseña");
        modelo.addColumn("perfil");
        modelo.addColumn("estado");
        modelo.addColumn("ultimo_login");
        modelo.addColumn("Modificar");
        modelo.addColumn("Eliminar");
        jTable1.setModel(modelo);
        jTable1.setDefaultRenderer(Object.class, new Render());
        JButton btn1 = new JButton("Modificar");
        btn1.setName("M");
        JButton btn2 = new JButton("Eliminar");
        btn2.setName("E");
        try {
            conexion.bd cbd = new bd();
            cbd.setServidor("jdbc:mysql://localhost/sistema_pos_anubis");
            cbd.setUsuario("root");
            cbd.setContrasena("");
            Connection con = cbd.getConexion();
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM usuarios WHERE nombre != '"+getUsuario()+"'");
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                datos[6] = rs.getString(7);
                datos[7] = btn1;
                datos[8] = btn2;
                modelo.addRow(datos);
            }
            jTable1.setModel(modelo);
            jTable1.setRowHeight(30);
            //rs.close();
        } catch (SQLException ex) {
            Logger.getLogger(Empleados_menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void actualizar_datos_de_cliente(){
        if(me.mod_dat_clientes_val == 1){
            nombre_empleado();
            me.mod_dat_clientes_val=0;
        }
        if(re.ins_dat_em == 1){
            nombre_empleado();
            re.ins_dat_em=0;
        }
        
    }
    
    /**
     * @return the usuario
     */
    public String getUsuario() {
        return usuario;
    }

    /**
     * @param usuario the usuario to set
     */
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }
}
